cmake_minimum_required(VERSION 2.8.3)

project(image_retrieval)

#set(CMAKE_BUILD_TYPE "Release")
#set(CMAKE_BUILD_TYPE "Debug")
set(CMAKE_CXX_FLAGS "-std=c++11 -O3 -fPIC")
#set(CMAKE_CXX_FLAGS "-std=c++11 -fPIC")
option (USE_DEBUG_IMAGE "Save & Show Debug Image" ON)
option (USE_MULTITHREAD_QUERY "Set Multi Threads" OFF)
if(USE_DEBUG_IMAGE)
    message("CMAKE enable debug image")
    set(OpenCV_DIR "/usr/local/share/OpenCV")
    ADD_DEFINITIONS(-DDEBUG_IMG_CMAKE)
else()
    message("CMake disable debug image")
    set(OpenCV_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/opencv/share/OpenCV/)
endif()
if(USE_MULTITHREAD_QUERY)
    message("CMAKE enable multithread query")
    ADD_DEFINITIONS(-DMULTITHREAD_QUERY_CMAKE)
else()
    message("CMAKE disable multithread query")
endif()
#set(EIGEN_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/eigen-3.3.7/include/eigen3)
set(EIGEN3_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/eigen-3.3.7/include/eigen3)
#set(Eigen3_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/eigen-3.3.7/share/eigen3/cmake)
#set(Eigen3_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/lib/eigen-3.3.7/share/eigen3/cmake)
find_package(OpenCV REQUIRED)
#find_package(Eigen3  REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
message("Current directory: " ${OpenCV_DIR})
#find_package(Boost REQUIRED COMPONENTS filesystem program_options system)
message("OpenCV directory: " ${OpenCV_DIR})
#include_directories(${Boost_INCLUDE_DIRS})

aux_source_directory("src/" SRC_FILES)
aux_source_directory("src/DBoW/" DBOW_FILES)
aux_source_directory("src/DUtils/" DUTILS_FILES)
aux_source_directory("src/DVision/" DVISION_FILES)

include_directories("src/")

set(SRC_CODE ${SRC_FILES} ${DBOW_FILES} ${DUTILS_FILES} ${DVISION_FILES} ${UTILITY_FILES})
add_library(imdb_sdk_lib SHARED ${SRC_CODE})
target_link_libraries(imdb_sdk_lib ${OpenCV_LIBS})
add_executable(imdb_sdk_test imdb_sdk_test.cpp)
target_link_libraries(imdb_sdk_test imdb_sdk_lib)
#add_executable(imdb_sdk_test_server imdb_sdk_test_server.cpp)
#target_link_libraries(imdb_sdk_test_server imdb_sdk_lib)

add_executable(generate_bin generate_bin.cpp)
target_link_libraries(generate_bin ${OpenCV_LIBS})

